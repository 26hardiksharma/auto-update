name: Build and Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.gitignore'

jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get version from package.json
        id: get-version
        shell: bash
        run: |
          VERSION=$(node -p "require('./package.json').version")
          VERSION_TAG="v${VERSION//./-}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check-tag
        shell: bash
        run: |
          if git rev-parse "${{ steps.get-version.outputs.version_tag }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build application
        if: steps.check-tag.outputs.exists == 'false'
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git tag
        if: steps.check-tag.outputs.exists == 'false'
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${{ steps.get-version.outputs.version_tag }}" -m "Release version ${{ steps.get-version.outputs.version }}"
          git push origin "${{ steps.get-version.outputs.version_tag }}"

      - name: Create Release
        if: steps.check-tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get-version.outputs.version_tag }}
          name: Release ${{ steps.get-version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/*.exe
            dist/latest*.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
